;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name uxbox.forms, :imports {EventType goog.events.EventType}, :requires {uxbox.projects.actions uxbox.projects.actions, icons uxbox.icons, uxbox.icons uxbox.icons, pubsub uxbox.pubsub, uxbox.pubsub uxbox.pubsub, events goog.events, goog.events goog.events, cuerdas.core cuerdas.core, EventType goog.events.EventType}, :uses {trim cuerdas.core, create-project uxbox.projects.actions}, :defs {close-lightbox {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/forms.cljs", :line 9, :column 7, :end-line 9, :end-column 21, :arglists (quote ([]))}, :name uxbox.forms/close-lightbox, :variadic false, :file "src/uxbox/forms.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, toggle-layout {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/forms.cljs", :line 18, :column 7, :end-line 18, :end-column 20, :arglists (quote ([]))}, :name uxbox.forms/toggle-layout, :variadic false, :file "src/uxbox/forms.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-project-layout {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/forms.cljs", :line 31, :column 7, :end-line 31, :end-column 28, :arglists (quote ([state layout]))}, :name uxbox.forms/update-project-layout, :variadic false, :file "src/uxbox/forms.cljs", :end-column 28, :method-params ([state layout]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state layout]))}, generate-layout-input {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/forms.cljs", :line 39, :column 7, :end-line 39, :end-column 28, :arglists (quote ([db layout]))}, :name uxbox.forms/generate-layout-input, :variadic false, :file "src/uxbox/forms.cljs", :end-column 28, :method-params ([db layout]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db layout]))}, lightbox* {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/forms.cljs", :line 57, :column 7, :end-line 57, :end-column 16, :arglists (quote ([db]))}, :name uxbox.forms/lightbox*, :variadic false, :file "src/uxbox/forms.cljs", :end-column 16, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}, dismiss-lightbox {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/forms.cljs", :line 111, :column 7, :end-line 111, :end-column 23, :arglists (quote ([e]))}, :name uxbox.forms/dismiss-lightbox, :variadic false, :file "src/uxbox/forms.cljs", :end-column 23, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, lightbox {:name uxbox.forms/lightbox, :file "src/uxbox/forms.cljs", :line 117, :column 1, :end-line 117, :end-column 14, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/forms.cljs", :line 117, :column 6, :end-line 117, :end-column 14}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:input#project-btn.btn-primary :div.lightbox :min :div.lightbox-body :toggle-layout :placeholder :input#project-witdh.input-text :lightbox :layout :a.toggle-layout :name :value :component-did-mount :div.project-size :width :type :a.close :on-click :input#project-height.input-text :for :close-lightbox :input#project-name.input-text :max :label :checked :component-will-unmount :div.input-radio.radio-primary :div.lightbox.hide :project-layouts :on-change :h3 :new-project :href :height}, :order [:close-lightbox :lightbox :toggle-layout :new-project :width :height :project-layouts :layout :name :type :value :checked :on-change :label :for :div.lightbox :div.lightbox.hide :div.lightbox-body :h3 :input#project-name.input-text :placeholder :div.project-size :input#project-witdh.input-text :min :max :a.toggle-layout :href :on-click :input#project-height.input-text :div.input-radio.radio-primary :input#project-btn.btn-primary :a.close :component-did-mount :component-will-unmount]}, :doc nil}