;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name uxbox.workspace.canvas.actions, :imports nil, :requires {pubsub uxbox.pubsub, uxbox.pubsub uxbox.pubsub, geo uxbox.geometry, uxbox.geometry uxbox.geometry, storage uxbox.storage, uxbox.storage uxbox.storage, shapes uxbox.shapes.core, uxbox.shapes.core uxbox.shapes.core, uxbox.workspace.figures.catalogs uxbox.workspace.figures.catalogs}, :uses {catalogs uxbox.workspace.figures.catalogs}, :defs {drawing-shape {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/canvas/actions.cljs", :line 8, :column 7, :end-line 8, :end-column 20, :arglists (quote ([coordinates]))}, :name uxbox.workspace.canvas.actions/drawing-shape, :variadic false, :file "src/uxbox/workspace/canvas/actions.cljs", :end-column 20, :method-params ([coordinates]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coordinates]))}, select-shape {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/canvas/actions.cljs", :line 12, :column 7, :end-line 12, :end-column 19, :arglists (quote ([coordinates]))}, :name uxbox.workspace.canvas.actions/select-shape, :variadic false, :file "src/uxbox/workspace/canvas/actions.cljs", :end-column 19, :method-params ([coordinates]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coordinates]))}, new-group {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/canvas/actions.cljs", :line 16, :column 7, :end-line 16, :end-column 16, :arglists (quote ([name order shape-uuid]))}, :name uxbox.workspace.canvas.actions/new-group, :variadic false, :file "src/uxbox/workspace/canvas/actions.cljs", :end-column 16, :method-params ([name order shape-uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 3, :fn-var true, :arglists (quote ([name order shape-uuid]))}, drawing-rect {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/canvas/actions.cljs", :line 38, :column 7, :end-line 38, :end-column 19, :arglists (quote ([state [x y]]))}, :name uxbox.workspace.canvas.actions/drawing-rect, :variadic false, :file "src/uxbox/workspace/canvas/actions.cljs", :end-column 19, :method-params ([state p__23212]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state [x y]]))}, drawing-line {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/canvas/actions.cljs", :line 55, :column 7, :end-line 55, :end-column 19, :arglists (quote ([state [x y]]))}, :name uxbox.workspace.canvas.actions/drawing-line, :variadic false, :file "src/uxbox/workspace/canvas/actions.cljs", :end-column 19, :method-params ([state p__23217]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state [x y]]))}, drawing-path {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/canvas/actions.cljs", :line 71, :column 7, :end-line 71, :end-column 19, :arglists (quote ([state [x y] symbol]))}, :name uxbox.workspace.canvas.actions/drawing-path, :variadic false, :file "src/uxbox/workspace/canvas/actions.cljs", :end-column 19, :method-params ([state p__23220 symbol]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state [x y] symbol]))}, drawing-circle {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/canvas/actions.cljs", :line 88, :column 7, :end-line 88, :end-column 21, :arglists (quote ([state [x y]]))}, :name uxbox.workspace.canvas.actions/drawing-circle, :variadic false, :file "src/uxbox/workspace/canvas/actions.cljs", :end-column 21, :method-params ([state p__23225]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state [x y]]))}, remove-element {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/canvas/actions.cljs", :line 164, :column 7, :end-line 164, :end-column 21, :arglists (quote ([groups-entry element-uuid]))}, :name uxbox.workspace.canvas.actions/remove-element, :variadic false, :file "src/uxbox/workspace/canvas/actions.cljs", :end-column 21, :method-params ([groups-entry element-uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 2, :fn-var true, :arglists (quote ([groups-entry element-uuid]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :figure :workspace :selected :viewport-mouse-down :else :insert-group :viewport-mouse-drag :name :drawing-shape :viewport-mouse-up :delete-key-pressed :circle :y1 :viewport-mouse-move :page :icon :dragging :select-shape :selected-tool :line :viewport-mouse-click :project :locked :cx :cy :square :svg :order :drawing :d :x :x1 :uuid :groups :y2 :visible :rect :x2 :insert-shape :symbols :shapes}, :order [:drawing-shape :select-shape :name :order :visible :locked :icon :shapes :square :page :groups :selected :drawing :x :y :insert-group :insert-shape :workspace :selected-tool :x1 :y1 :x2 :y2 :d :svg :cx :cy :rect :line :circle :figure :symbols :else :project :uuid :viewport-mouse-click :viewport-mouse-drag :delete-key-pressed :viewport-mouse-down :dragging :viewport-mouse-up :viewport-mouse-move]}, :doc nil}