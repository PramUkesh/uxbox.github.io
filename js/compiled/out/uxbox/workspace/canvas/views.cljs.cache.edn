;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name uxbox.workspace.canvas.views, :imports nil, :requires {pubsub uxbox.pubsub, shapes uxbox.shapes.core, reagent.core reagent.core, geo uxbox.geometry, uxbox.shapes.core uxbox.shapes.core, actions uxbox.workspace.canvas.actions, uxbox.workspace.canvas.actions uxbox.workspace.canvas.actions, str cuerdas.core, uxbox.pubsub uxbox.pubsub, uxbox.geometry uxbox.geometry, cuerdas.core cuerdas.core}, :uses {atom reagent.core}, :defs {grid {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/canvas/views.cljs", :line 9, :column 7, :end-line 9, :end-column 11, :arglists (quote ([width height start-width start-height zoom]))}, :name uxbox.workspace.canvas.views/grid, :variadic false, :file "src/uxbox/workspace/canvas/views.cljs", :end-column 11, :method-params ([width height start-width start-height zoom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 5, :fn-var true, :arglists (quote ([width height start-width start-height zoom]))}, vertical-rule {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/canvas/views.cljs", :line 34, :column 7, :end-line 34, :end-column 20, :arglists (quote ([height start-height zoom]))}, :name uxbox.workspace.canvas.views/vertical-rule, :variadic false, :file "src/uxbox/workspace/canvas/views.cljs", :end-column 20, :method-params ([height start-height zoom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 3, :fn-var true, :arglists (quote ([height start-height zoom]))}, horizontal-rule {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/canvas/views.cljs", :line 58, :column 7, :end-line 58, :end-column 22, :arglists (quote ([width start-width zoom]))}, :name uxbox.workspace.canvas.views/horizontal-rule, :variadic false, :file "src/uxbox/workspace/canvas/views.cljs", :end-column 22, :method-params ([width start-width zoom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 3, :fn-var true, :arglists (quote ([width start-width zoom]))}, debug-coordinates {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/canvas/views.cljs", :line 83, :column 7, :end-line 83, :end-column 24, :arglists (quote ([db]))}, :name uxbox.workspace.canvas.views/debug-coordinates, :variadic false, :file "src/uxbox/workspace/canvas/views.cljs", :end-column 24, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}, canvas {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/canvas/views.cljs", :line 95, :column 7, :end-line 95, :end-column 13, :arglists (quote ([db]))}, :name uxbox.workspace.canvas.views/canvas, :variadic false, :file "src/uxbox/workspace/canvas/views.cljs", :end-column 13, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :workspace :stroke :transform :selected :table :viewport-mouse-down :key :else :g.horizontal-rule :grid :viewport-mouse-up :td :fill :tr :y1 :viewport-mouse-move :width :page :svg#page-layout :svg#page-canvas :on-mouse-down :on-click :style :div :g :line :viewport-mouse-click :svg#viewport :opacity :on-mouse-move :order :drawing :on-mouse-up :x :x1 :g.grid :groups :g.vertical-rule :y2 :visible :rect :x2 :height :text :shapes}, :order [:line :key :y1 :y2 :x1 :x2 :stroke :opacity :g.grid :g :text :y :x :transform :fill :style :else :g.vertical-rule :rect :height :width :g.horizontal-rule :viewport-mouse-move :div :table :tr :td :page :shapes :visible :order :groups :on-mouse-move :on-click :on-mouse-down :on-mouse-up :viewport-mouse-click :viewport-mouse-down :viewport-mouse-up :svg#viewport :svg#page-canvas :svg#page-layout :drawing :selected :grid :workspace]}, :doc nil}