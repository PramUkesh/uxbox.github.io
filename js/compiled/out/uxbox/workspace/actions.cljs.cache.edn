;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name uxbox.workspace.actions, :imports nil, :requires {pubsub uxbox.pubsub, uxbox.pubsub uxbox.pubsub, storage uxbox.storage, uxbox.storage uxbox.storage}, :uses nil, :defs {toggle-select-group {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/actions.cljs", :line 29, :column 7, :end-line 29, :end-column 26, :arglists (quote ([group-id]))}, :name uxbox.workspace.actions/toggle-select-group, :variadic false, :file "src/uxbox/workspace/actions.cljs", :end-column 26, :method-params ([group-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([group-id]))}, open-setting-box {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/actions.cljs", :line 13, :column 7, :end-line 13, :end-column 23, :arglists (quote ([setting-box]))}, :name uxbox.workspace.actions/open-setting-box, :variadic false, :file "src/uxbox/workspace/actions.cljs", :end-column 23, :method-params ([setting-box]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([setting-box]))}, set-figures-catalog {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/actions.cljs", :line 21, :column 7, :end-line 21, :end-column 26, :arglists (quote ([catalog]))}, :name uxbox.workspace.actions/set-figures-catalog, :variadic false, :file "src/uxbox/workspace/actions.cljs", :end-column 26, :method-params ([catalog]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([catalog]))}, set-tool {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/actions.cljs", :line 17, :column 7, :end-line 17, :end-column 15, :arglists (quote ([tool]))}, :name uxbox.workspace.actions/set-tool, :variadic false, :file "src/uxbox/workspace/actions.cljs", :end-column 15, :method-params ([tool]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tool]))}, change-shape-attr {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/actions.cljs", :line 5, :column 7, :end-line 5, :end-column 24, :arglists (quote ([project-uuid page-uuid shape-uuid attr value]))}, :name uxbox.workspace.actions/change-shape-attr, :variadic false, :file "src/uxbox/workspace/actions.cljs", :end-column 24, :method-params ([project-uuid page-uuid shape-uuid attr value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 5, :fn-var true, :arglists (quote ([project-uuid page-uuid shape-uuid attr value]))}, toggle-grid {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/actions.cljs", :line 25, :column 7, :end-line 25, :end-column 18, :arglists (quote ([]))}, :name uxbox.workspace.actions/toggle-grid, :variadic false, :file "src/uxbox/workspace/actions.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, toggle-group-lock {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/actions.cljs", :line 37, :column 7, :end-line 37, :end-column 24, :arglists (quote ([group-id]))}, :name uxbox.workspace.actions/toggle-group-lock, :variadic false, :file "src/uxbox/workspace/actions.cljs", :end-column 24, :method-params ([group-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([group-id]))}, close-setting-box {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/actions.cljs", :line 9, :column 7, :end-line 9, :end-column 24, :arglists (quote ([setting-box]))}, :name uxbox.workspace.actions/close-setting-box, :variadic false, :file "src/uxbox/workspace/actions.cljs", :end-column 24, :method-params ([setting-box]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([setting-box]))}, view-page {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/actions.cljs", :line 41, :column 7, :end-line 41, :end-column 16, :arglists (quote ([project-uuid page-uuid]))}, :name uxbox.workspace.actions/view-page, :variadic false, :file "src/uxbox/workspace/actions.cljs", :end-column 16, :method-params ([project-uuid page-uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([project-uuid page-uuid]))}, toggle-group-visibility {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/workspace/actions.cljs", :line 33, :column 7, :end-line 33, :end-column 30, :arglists (quote ([group-id]))}, :name uxbox.workspace.actions/toggle-group-visibility, :variadic false, :file "src/uxbox/workspace/actions.cljs", :end-column 30, :method-params ([group-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([group-id]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:default-open-setting-boxes :open-setting-box :workspace :workspace-defaults :set-figures-catalog :set-tool :grid :open-setting-boxes :change-shape-attr :toggle-grid :page :toggle-group-lock :close-setting-box :selected-tool :project :locked :view-page :selected-groups :toggle-group-visiblity :layers :current-catalog :groups :visible :visible-project-bar :location :toggle-select-group :shapes}, :order [:change-shape-attr :close-setting-box :open-setting-box :set-tool :set-figures-catalog :toggle-grid :toggle-select-group :toggle-group-visiblity :toggle-group-lock :view-page :page :shapes :open-setting-boxes :layers :workspace :selected-tool :current-catalog :grid :selected-groups :groups :visible :locked :location :project :workspace-defaults :default-open-setting-boxes :visible-project-bar]}, :doc nil}