;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name uxbox.geometry, :imports nil, :requires nil, :uses nil, :defs {coords->rect {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/geometry.cljs", :line 3, :column 7, :end-line 3, :end-column 19, :arglists (quote ([x1 y1 x2 y2])), :doc "Given the (x1,y1) and (x2,y2) coordinates return the rectangle that\n  define as (top-left corner, width, height)"}, :name uxbox.geometry/coords->rect, :variadic false, :file "src/uxbox/geometry.cljs", :end-column 19, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2])), :doc "Given the (x1,y1) and (x2,y2) coordinates return the rectangle that\n  define as (top-left corner, width, height)"}, clientcoord->viewportcord {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/geometry.cljs", :line 13, :column 7, :end-line 13, :end-column 32, :arglists (quote ([client-x client-y]))}, :name uxbox.geometry/clientcoord->viewportcord, :variadic false, :file "src/uxbox/geometry.cljs", :end-column 32, :method-params ([client-x client-y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([client-x client-y]))}, viewportcord->clientcoord {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/geometry.cljs", :line 24, :column 7, :end-line 24, :end-column 32, :arglists (quote ([viewport-x viewport-y]))}, :name uxbox.geometry/viewportcord->clientcoord, :variadic false, :file "src/uxbox/geometry.cljs", :end-column 32, :method-params ([viewport-x viewport-y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([viewport-x viewport-y]))}, slope {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/geometry.cljs", :line 35, :column 7, :end-line 35, :end-column 12, :arglists (quote ([x1 y1 x2 y2]))}, :name uxbox.geometry/slope, :variadic false, :file "src/uxbox/geometry.cljs", :end-column 12, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2]))}, distance2 {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/geometry.cljs", :line 39, :column 7, :end-line 39, :end-column 16, :arglists (quote ([x1 y1 x2 y2]))}, :name uxbox.geometry/distance2, :variadic false, :file "src/uxbox/geometry.cljs", :end-column 16, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2]))}, distance {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/geometry.cljs", :line 46, :column 7, :end-line 46, :end-column 15, :arglists (quote ([x1 y1 x2 y2]))}, :name uxbox.geometry/distance, :variadic false, :file "src/uxbox/geometry.cljs", :end-column 15, :method-params ([x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x1 y1 x2 y2]))}, distance-line-point2 {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/geometry.cljs", :line 50, :column 7, :end-line 50, :end-column 27, :arglists (quote ([vx vy wx wy px py]))}, :name uxbox.geometry/distance-line-point2, :variadic false, :file "src/uxbox/geometry.cljs", :end-column 27, :method-params ([vx vy wx wy px py]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 6, :fn-var true, :arglists (quote ([vx vy wx wy px py]))}, distance-line-point {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/geometry.cljs", :line 63, :column 7, :end-line 63, :end-column 26, :arglists (quote ([vx vy wx wy px py]))}, :name uxbox.geometry/distance-line-point, :variadic false, :file "src/uxbox/geometry.cljs", :end-column 26, :method-params ([vx vy wx wy px py]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 6, :fn-var true, :arglists (quote ([vx vy wx wy px py]))}, distance-line-circle {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/geometry.cljs", :line 66, :column 7, :end-line 66, :end-column 27, :arglists (quote ([cx cy r px py]))}, :name uxbox.geometry/distance-line-circle, :variadic false, :file "src/uxbox/geometry.cljs", :end-column 27, :method-params ([cx cy r px py]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 5, :fn-var true, :arglists (quote ([cx cy r px py]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}