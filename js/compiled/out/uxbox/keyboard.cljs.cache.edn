;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name uxbox.keyboard, :imports {EventType goog.events.EventType, KeyCodes goog.events.KeyCodes}, :requires {pubsub uxbox.pubsub, uxbox.pubsub uxbox.pubsub, events goog.events, goog.events goog.events, dom goog.dom, goog.dom goog.dom, EventType goog.events.EventType, KeyCodes goog.events.KeyCodes}, :uses nil, :defs {key-event {:name uxbox.keyboard/key-event, :file "src/uxbox/keyboard.cljs", :line 7, :column 1, :end-line 7, :end-column 15, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/keyboard.cljs", :line 7, :column 6, :end-line 7, :end-column 15}}, dispatch-key {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/keyboard.cljs", :line 10, :column 7, :end-line 10, :end-column 19, :arglists (quote ([e]))}, :name uxbox.keyboard/dispatch-key, :variadic false, :file "src/uxbox/keyboard.cljs", :end-column 19, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, start-keyboard! {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/keyboard.cljs", :line 14, :column 7, :end-line 14, :end-column 22, :arglists (quote ([]))}, :name uxbox.keyboard/start-keyboard!, :variadic false, :file "src/uxbox/keyboard.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:delete-key-pressed}, :order [:delete-key-pressed]}, :doc nil}