;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name uxbox.storage, :imports nil, :requires {hodgepodge.core hodgepodge.core, uxbox.shapes.core uxbox.shapes.core}, :uses {local-storage hodgepodge.core, get-item hodgepodge.core, Rectangle uxbox.shapes.core, move-delta uxbox.shapes.core, Line uxbox.shapes.core, set-item hodgepodge.core}, :defs {get-projects {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 91, :column 7, :end-line 91, :end-column 19, :arglists (quote ([username]))}, :name uxbox.storage/get-projects, :variadic false, :file "src/uxbox/storage.cljs", :end-column 19, :method-params ([username]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([username]))}, remove-element {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 150, :column 7, :end-line 150, :end-column 21, :arglists (quote ([groups-entry element-uuid]))}, :name uxbox.storage/remove-element, :variadic false, :file "src/uxbox/storage.cljs", :end-column 21, :method-params ([groups-entry element-uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 2, :fn-var true, :arglists (quote ([groups-entry element-uuid]))}, create-shape {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 146, :column 7, :end-line 146, :end-column 19, :arglists (quote ([project-uuid page-uuid shape-uuid shape]))}, :name uxbox.storage/create-shape, :variadic false, :file "src/uxbox/storage.cljs", :end-column 19, :method-params ([project-uuid page-uuid shape-uuid shape]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 4, :fn-var true, :arglists (quote ([project-uuid page-uuid shape-uuid shape]))}, get-project {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 107, :column 7, :end-line 107, :end-column 18, :arglists (quote ([uuid]))}, :name uxbox.storage/get-project, :variadic false, :file "src/uxbox/storage.cljs", :end-column 18, :method-params ([uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uuid]))}, move-shape {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 175, :column 7, :end-line 175, :end-column 17, :arglists (quote ([project-uuid page-uuid shape-uuid deltax deltay]))}, :name uxbox.storage/move-shape, :variadic false, :file "src/uxbox/storage.cljs", :end-column 17, :method-params ([project-uuid page-uuid shape-uuid deltax deltay]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 5, :fn-var true, :arglists (quote ([project-uuid page-uuid shape-uuid deltax deltay]))}, data {:name uxbox.storage/data, :file "src/uxbox/storage.cljs", :line 84, :column 1, :end-line 84, :end-column 14, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 84, :column 10, :end-line 84, :end-column 14}}, users {:name uxbox.storage/users, :file "src/uxbox/storage.cljs", :line 5, :column 1, :end-line 5, :end-column 11, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 5, :column 6, :end-line 5, :end-column 11}}, projects {:name uxbox.storage/projects, :file "src/uxbox/storage.cljs", :line 10, :column 1, :end-line 10, :end-column 14, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 10, :column 6, :end-line 10, :end-column 14}}, create-page {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 126, :column 7, :end-line 126, :end-column 18, :arglists (quote ([project-uuid page]))}, :name uxbox.storage/create-page, :variadic false, :file "src/uxbox/storage.cljs", :end-column 18, :method-params ([project-uuid page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 2, :fn-var true, :arglists (quote ([project-uuid page]))}, change-page-title {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 130, :column 7, :end-line 130, :end-column 24, :arglists (quote ([project-uuid page title]))}, :name uxbox.storage/change-page-title, :variadic false, :file "src/uxbox/storage.cljs", :end-column 24, :method-params ([project-uuid page title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 3, :fn-var true, :arglists (quote ([project-uuid page title]))}, get-page {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 142, :column 7, :end-line 142, :end-column 15, :arglists (quote ([project-uuid page-uuid]))}, :name uxbox.storage/get-page, :variadic false, :file "src/uxbox/storage.cljs", :end-column 15, :method-params ([project-uuid page-uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 2, :fn-var true, :arglists (quote ([project-uuid page-uuid]))}, create-group {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 167, :column 7, :end-line 167, :end-column 19, :arglists (quote ([project-uuid page-uuid group-uuid group]))}, :name uxbox.storage/create-group, :variadic false, :file "src/uxbox/storage.cljs", :end-column 19, :method-params ([project-uuid page-uuid group-uuid group]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 4, :fn-var true, :arglists (quote ([project-uuid page-uuid group-uuid group]))}, change-shape-attr {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 171, :column 7, :end-line 171, :end-column 24, :arglists (quote ([project-uuid page-uuid shape-uuid attr value]))}, :name uxbox.storage/change-shape-attr, :variadic false, :file "src/uxbox/storage.cljs", :end-column 24, :method-params ([project-uuid page-uuid shape-uuid attr value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 5, :fn-var true, :arglists (quote ([project-uuid page-uuid shape-uuid attr value]))}, delete-project {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 138, :column 7, :end-line 138, :end-column 21, :arglists (quote ([uuid]))}, :name uxbox.storage/delete-project, :variadic false, :file "src/uxbox/storage.cljs", :end-column 21, :method-params ([uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uuid]))}, remove-shape {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 161, :column 7, :end-line 161, :end-column 19, :arglists (quote ([project-uuid page-uuid shape-uuid]))}, :name uxbox.storage/remove-shape, :variadic false, :file "src/uxbox/storage.cljs", :end-column 19, :method-params ([project-uuid page-uuid shape-uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 3, :fn-var true, :arglists (quote ([project-uuid page-uuid shape-uuid]))}, delete-page {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 134, :column 7, :end-line 134, :end-column 18, :arglists (quote ([project-uuid page]))}, :name uxbox.storage/delete-page, :variadic false, :file "src/uxbox/storage.cljs", :end-column 18, :method-params ([project-uuid page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 2, :fn-var true, :arglists (quote ([project-uuid page]))}, create-project {:protocol-inline nil, :meta {:file "/home/alotor/Projects/UXBox/front/src/uxbox/storage.cljs", :line 122, :column 7, :end-line 122, :end-column 21, :arglists (quote ([project]))}, :name uxbox.storage/create-project, :variadic false, :file "src/uxbox/storage.cljs", :end-column 21, :method-params ([project]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 1, :fn-var true, :arglists (quote ([project]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:projects :else :password :layout :name :comments :username :width :created :comment-count :first-page-uuid :title :pages :author :last-update :comment :uuid :groups :pages-count :local-storage :owner :height :users :text :data :shapes}, :order [:username :password :name :uuid :last-update :created :owner :comments :pages :text :title :author :width :height :shapes :groups :comment :data :users :projects :local-storage :layout :comment-count :first-page-uuid :pages-count :else]}, :doc nil}